[{"/Users/amitaysoffer/Desktop/Todo_pern/client/src/App.js":"1","/Users/amitaysoffer/Desktop/Todo_pern/client/src/components/InputTodo.js":"2","/Users/amitaysoffer/Desktop/Todo_pern/client/src/components/ListTodos.js":"3","/Users/amitaysoffer/Desktop/Todo_pern/client/src/components/EditTodo.js":"4","/Users/amitaysoffer/Desktop/Todo_pern/client/src/index.js":"5","/Users/amitaysoffer/Desktop/Todo_pern/client/src/reportWebVitals.js":"6"},{"size":262,"mtime":1606561720017,"results":"7","hashOfConfig":"8"},{"size":785,"mtime":1606565842610,"results":"9","hashOfConfig":"8"},{"size":1320,"mtime":1606580833962,"results":"10","hashOfConfig":"8"},{"size":1668,"mtime":1606564702302,"results":"11","hashOfConfig":"8"},{"size":500,"mtime":1606476199151,"results":"12","hashOfConfig":"8"},{"size":362,"mtime":1606476199151,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"li36ds",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/amitaysoffer/Desktop/Todo_pern/client/src/App.js",[],"/Users/amitaysoffer/Desktop/Todo_pern/client/src/components/InputTodo.js",["27"],"/Users/amitaysoffer/Desktop/Todo_pern/client/src/components/ListTodos.js",["28"],"/Users/amitaysoffer/Desktop/Todo_pern/client/src/components/EditTodo.js",["29"],"import React, { Fragment, useState } from 'react'\nimport axios from 'axios'\n\nconst EditTodo = ({ todo }) => {\n  const [description, setDescription] = useState(todo.description);\n\n  const updateDescription = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await axios.put(`http://localhost:5000/todos/${todo.todo_id}`, {\n        description\n      })\n    } catch (error) {\n      console.error(error.message)\n    }\n  }\n\n  return (\n    <Fragment>\n      <button type=\"button\" className=\"btn btn-warning\" data-toggle=\"modal\" data-target={`#id${todo.todo_id}`}>Edit</button>\n\n      <div className=\"modal\" id={`id${todo.todo_id}`} onClick={() => setDescription(todo.description)}>\n        <div className=\"modal-dialog\">\n          <div className=\"modal-content\">\n\n            <div className=\"modal-header\">\n              <h4 className=\"modal-title\">Edit Todo</h4>\n              <button type=\"button\" className=\"close\" data-dismiss=\"modal\" onClick={() => setDescription(todo.description)}>&times;</button>\n            </div>\n\n            <div className=\"modal-body\">\n              <input type=\"text\" className=\"form-control\" value={description} onChange={e => setDescription(e.target.value)} />\n            </div>\n\n            <div className=\"modal-footer\">\n              <button type=\"button\" className=\"btn btn-warning\" data-dismiss=\"modal\" onClick={e => updateDescription(e)} >Edit</button>\n              <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\" onClick={() => setDescription(todo.description)}>Close</button>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  )\n}\n\nexport default EditTodo\n","/Users/amitaysoffer/Desktop/Todo_pern/client/src/index.js",[],"/Users/amitaysoffer/Desktop/Todo_pern/client/src/reportWebVitals.js",[],{"ruleId":"30","severity":1,"message":"31","line":10,"column":13,"nodeType":"32","messageId":"33","endLine":10,"endColumn":21},{"ruleId":"30","severity":1,"message":"34","line":10,"column":13,"nodeType":"32","messageId":"33","endLine":10,"endColumn":23},{"ruleId":"30","severity":1,"message":"31","line":10,"column":13,"nodeType":"32","messageId":"33","endLine":10,"endColumn":21},"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","'deleteTodo' is assigned a value but never used."]